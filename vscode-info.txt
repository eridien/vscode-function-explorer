properties on TreeItem include:

id

label:            The main text shown in the tree. Required for display.
iconPath:         Sets the icon for the item.
collapsibleState: Controls whether the item is expandable (None, Collapsed, Expanded).
command:          Associates a command to run when the item is clicked.
description:      Secondary text shown next to the label.
tooltip:          Text shown on hover.
contextValue:     Used for menu/context menu "when" clauses to show/hide actions.
resourceUri:      Used for file/folder items; enables file icons and some VS Code features.

Changing collapsibleState + firing an event updates the expand/collapse arrow, but does not actually expand/collapse the item in the UI.
To actually expand/collapse in the UI, use TreeView.reveal with the appropriate options.

When you set resourceUri:  VS Code shows the file/folder icon and theme colors for that resource. The item gets file/folder context menus (like "Reveal in Explorer", "Copy Path", etc.). The item can participate in file decorations (e.g., git status badges, error/warning badges). The item can be opened in the editor if it’s a file. The item’s contextValue can be affected by file type (e.g., file, folder).

description is optional and is visually less prominent than label, dimmer. It is not used for sorting or identification—just for display. Both are plain text, but label is required and description is for supplementary info.

When a user clicks on a TreeItem’s label in a VS Code TreeView, the default behavior is:  If the item has a command property set, VS Code executes that command, passing the TreeItem as an argument. If the item is expandable (collapsibleState is Collapsed or Expanded), clicking the arrow toggles expansion/collapse, but clicking the label still runs the command if set. If no command is set, nothing happens except selection.

if a TreeItem has a resourceUri and no iconPath, VS Code will automatically supply the appropriate file or folder icon based on the resourceUri. 
